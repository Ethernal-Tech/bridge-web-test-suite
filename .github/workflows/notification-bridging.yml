---
name: Bridging Notification
on:
  workflow_call:
    inputs:
      source:
        type: string
        required: true
      destination:
        type: string
        required: true
      bridging_status:
        type: string
        required: true
      source_status:
        type: string
        required: true
      bridge_status:
        type: string
        required: true
      destination_status:
        type: string
        required: true
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  notification:
    name: Notification
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          succeed_bnt: 'primary'
          failed_bnt: 'danger'
          succeed_job: ':green:'
          failed_job: ':red:'
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Apex Bridge Reactor"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Workflow Run"
                      },
                      "style": "${{ inputs.bridging_status == 'success' && env.succeed_bnt || env.failed_bnt }}",
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ inputs.source_status == 'true' && env.succeed_job || env.failed_job }} *${{ inputs.source }}* ${{ inputs.bridge_status == 'true' && env.succeed_job || env.failed_job }} *Bridge* ${{ inputs.destination_status == 'true' && env.succeed_job || env.failed_job }} *${{ inputs.destination }}*"
                  }
                }
              ]
            }
